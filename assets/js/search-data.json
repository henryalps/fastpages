{
  
    
        "post0": {
            "title": "自动生成Jupyter笔记本文件",
            "content": "## 原因 由于手动创建符合FastPages的笔记本文件比较麻烦（对文件名，格式都有要求），因此，使用代码简单生成一个脚手架文件。 ## 方法 ① 打开目录下的‘tools.ipynb’文件； ② 修改标题、描述等配置信息； ③ 运行后即可生成笔记本文件 ## tips 可以在_config.yml中排除`tools.ipynb`，避免它也生成一个页面。 .",
            "url": "https://henryalps.github.io/fastpages/jupyter/2020/05/24/Notebook-files-automatically-generated-Jupyter.html",
            "relUrl": "/jupyter/2020/05/24/Notebook-files-automatically-generated-Jupyter.html",
            "date": " • May 24, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "create a new blog!",
            "content": "!pip install translation . ^C . from googletrans import Translator from datetime import datetime from functools import lru_cache title=&#39;自动生成Jupyter笔记本文件&#39; description=&#39;使用代码自动生成的Jupyter笔记本文件&#39; toc=&#39;true&#39; tags=&#39;,&#39;.join([&#39;jupyter&#39;]) branch=&#39;master&#39; badges=&#39;true&#39; comments=&#39;true&#39; date=datetime.today().strftime(&#39;%Y-%m-%d&#39;) @lru_cache(maxsize=10) def translate(text): return &#39;-&#39;.join(Translator().translate(text).text.split()) if len(title) &lt; 1: print(&#39;title not set!&#39;) exit() format_title = translate(title) print(format_title) import nbformat as nbf nb = nbf.v4.new_notebook() text = &quot;&quot;&quot; # {title} - toc: {toc} - branch: {branch} - badges: {badges} - comments: {comments} - categories: [{tags}] - description: {description} &quot;&quot;&quot;.format(title=title, toc=toc, branch=branch, badges=badges, comments=comments, tags=tags, description=description) print(text) nb[&#39;cells&#39;] = [nbf.v4.new_markdown_cell(text)] nbf.write(nb, &#39;{}-{}.ipynb&#39;.format(date,format_title)) . Notebook-files-automatically-generated-Jupyter # 自动生成Jupyter笔记本文件 - toc: true - branch: master - badges: true - comments: true - categories: [jupyter] - description: 使用代码自动生成的Jupyter笔记本文件 .",
            "url": "https://henryalps.github.io/fastpages/2020/05/23/tools.html",
            "relUrl": "/2020/05/23/tools.html",
            "date": " • May 23, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "基本算法练习",
            "content": "&#24555;&#36895;&#25490;&#24207; . 基本思想 选择哨兵，将比它大的放到左边，小的放到右边。再对左右重复进行上述过程。 . def fast_sort(seq, start, end): if start &gt;= end: return seq # end选为哨兵 sequential_idx = end left_idx = start right_idx = end - 1 while left_idx &lt; right_idx: if seq[left_idx] &gt; seq[sequential_idx] and seq[right_idx] &lt; seq[sequential_idx]: tmp = seq[left_idx] seq[left_idx] = seq[right_idx] seq[right_idx] = tmp left_idx += 1 right_idx -= 1 elif seq[right_idx] &lt; seq[sequential_idx]: left_idx += 1 elif seq[left_idx] &gt; seq[sequential_idx]: right_idx -= 1 else: left_idx += 1 right_idx -= 1 lower_idx = min([left_idx, right_idx]) if seq[sequential_idx] &gt; seq[lower_idx]: tmp = seq[sequential_idx] seq[sequential_idx] = seq[lower_idx + 1] seq[lower_idx + 1] = tmp fast_sort(seq, start, lower_idx) fast_sort(seq, lower_idx + 2, end) else: tmp = seq[sequential_idx] seq[sequential_idx] = seq[lower_idx] seq[lower_idx] = tmp fast_sort(seq, start, lower_idx - 1) fast_sort(seq, lower_idx + 1, end) return seq if &#39;__main__&#39; == __name__: seq = [1,3,4,2,1] print(fast_sort(seq, 0, len(seq) - 1)) seq = [] print(fast_sort(seq, 0, len(seq) - 1)) seq = [2,1] print(fast_sort(seq, 0, len(seq) - 1)) seq = [2,1,1,1,1] print(fast_sort(seq, 0, len(seq) - 1)) . [1, 1, 2, 3, 4] [] [1, 2] [1, 1, 1, 1, 2] . &#34920;&#36798;&#24335;&#27714;&#20540; . 给定一个带括号和加号的表达式，对其进行求值。 . def eval(exp): symbol_stack = [] exp_stack = [] val_stack = [-1] for ch in exp: if ch == &#39;(&#39;: symbol_stack.append(ch) elif ch == &#39;)&#39;: exp = exp_stack.pop() right = val_stack.pop() left = val_stack.pop() if exp == &#39;+&#39;: val_stack.append(right + left) elif ch == &#39;+&#39;: exp_stack.append(ch) else: val_stack.append(int(ch)) while len(exp_stack) &gt; 0: right = val_stack.pop() left = val_stack.pop() if (exp_stack.pop() == &#39;+&#39;): val_stack.append(right + left) return val_stack.pop() if __name__ == &quot;__main__&quot;: print(eval(&#39;(1+2)+(4+5)+6&#39;)) . 18 .",
            "url": "https://henryalps.github.io/fastpages/python/jupyter/2020/05/16/python-code-snippets.html",
            "relUrl": "/python/jupyter/2020/05/16/python-code-snippets.html",
            "date": " • May 16, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "如何用python的for实现死循环",
            "content": "import logging logger = logging.getLogger(__name__) logger.setLevel(logging.WARNING) console = logging.StreamHandler() logger.addHandler(console) formatter = logging.Formatter(fmt=&#39;%(asctime)s %(message)s&#39;,datefmt=&#39;%Y-%m-%d,%H:%M:%S.%f&#39;) console.setFormatter(formatter) # 遍历一个数组时，操作这个数组不断在后边插入，同时删除已遍历的元素 inc_list = [0] for i in inc_list: logging.warning(&#39;looping...&#39;) del i inc_list.append(0) . WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... WARNING:root:looping... . KeyboardInterrupt Traceback (most recent call last) &lt;ipython-input-1-21798d70db2e&gt; in &lt;module&gt; 10 inc_list = [0] 11 for i in inc_list: &gt; 12 logging.warning(&#39;looping...&#39;) 13 del i 14 inc_list.append(0) ~ Anaconda3 envs tensorflow lib logging __init__.py in warning(msg, *args, **kwargs) 1885 if len(root.handlers) == 0: 1886 basicConfig() -&gt; 1887 root.warning(msg, *args, **kwargs) 1888 1889 def warn(msg, *args, **kwargs): ~ Anaconda3 envs tensorflow lib logging __init__.py in warning(self, msg, *args, **kwargs) 1318 &#34;&#34;&#34; 1319 if self.isEnabledFor(WARNING): -&gt; 1320 self._log(WARNING, msg, args, **kwargs) 1321 1322 def warn(self, msg, *args, **kwargs): ~ Anaconda3 envs tensorflow lib logging __init__.py in _log(self, level, msg, args, exc_info, extra, stack_info) 1442 record = self.makeRecord(self.name, level, fn, lno, msg, args, 1443 exc_info, func, extra, sinfo) -&gt; 1444 self.handle(record) 1445 1446 def handle(self, record): ~ Anaconda3 envs tensorflow lib logging __init__.py in handle(self, record) 1452 &#34;&#34;&#34; 1453 if (not self.disabled) and self.filter(record): -&gt; 1454 self.callHandlers(record) 1455 1456 def addHandler(self, hdlr): ~ Anaconda3 envs tensorflow lib logging __init__.py in callHandlers(self, record) 1514 found = found + 1 1515 if record.levelno &gt;= hdlr.level: -&gt; 1516 hdlr.handle(record) 1517 if not c.propagate: 1518 c = None #break out ~ Anaconda3 envs tensorflow lib logging __init__.py in handle(self, record) 863 self.acquire() 864 try: --&gt; 865 self.emit(record) 866 finally: 867 self.release() ~ Anaconda3 envs tensorflow lib logging __init__.py in emit(self, record) 994 msg = self.format(record) 995 stream = self.stream --&gt; 996 stream.write(msg) 997 stream.write(self.terminator) 998 self.flush() ~ Anaconda3 envs tensorflow lib site-packages ipykernel iostream.py in write(self, string) 408 self.flush() 409 else: --&gt; 410 self._schedule_flush() 411 412 def writelines(self, sequence): ~ Anaconda3 envs tensorflow lib site-packages ipykernel iostream.py in _schedule_flush(self) 332 def _schedule_in_thread(): 333 self._io_loop.call_later(self.flush_interval, self._flush) --&gt; 334 self.pub_thread.schedule(_schedule_in_thread) 335 336 def flush(self): ~ Anaconda3 envs tensorflow lib site-packages ipykernel iostream.py in schedule(self, f) 203 self._events.append(f) 204 # wake event thread (message content is ignored) --&gt; 205 self._event_pipe.send(b&#39;&#39;) 206 else: 207 f() ~ Anaconda3 envs tensorflow lib site-packages zmq sugar socket.py in send(self, data, flags, copy, track, routing_id, group) 398 copy_threshold=self.copy_threshold) 399 data.group = group --&gt; 400 return super(Socket, self).send(data, flags=flags, copy=copy, track=track) 401 402 def send_multipart(self, msg_parts, flags=0, copy=True, track=False, **kwargs): zmq/backend/cython/socket.pyx in zmq.backend.cython.socket.Socket.send() zmq/backend/cython/socket.pyx in zmq.backend.cython.socket.Socket.send() zmq/backend/cython/socket.pyx in zmq.backend.cython.socket._send_copy() ~ Anaconda3 envs tensorflow lib site-packages zmq backend cython checkrc.pxd in zmq.backend.cython.checkrc._check_rc() KeyboardInterrupt: .",
            "url": "https://henryalps.github.io/fastpages/python/jupyter/2020/05/16/how-to-write-infinete-loop-with-python-for.html",
            "relUrl": "/python/jupyter/2020/05/16/how-to-write-infinete-loop-with-python-for.html",
            "date": " • May 16, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "图示各种Tensor操作",
            "content": "Tensor&#30340;&#24418;&#29366; . Tensor是什么？ | . 机器学习中的定义下，Tensor是数据的容器。我将其理解为每个元素大小都相等的N维数组。 但在严格的数学定义中，Tensor又不仅仅是数据的容器，Tensor具备几何意义，其中的每个元素实际上表示了某个基向量的权重。 . 为什么要用Tensor? | . 机器学习中，使用Tensor纯粹是需要定义这样一种数据类型--换个名字都可以。 根据某YouTude视频，由于Tensor表征了不同基向量之间的组合。这意味着即使空间发生变换（不涉及升降维），Tensor中存储的信息也不会发生改变，所以Tensor实际是对信息的一种最精简的表示（如果对空间进行变换，基向量互相垂直的关系是否会发生改变？） .",
            "url": "https://henryalps.github.io/fastpages/tensorflow/jupyter/2020/05/04/tensor-operation.html",
            "relUrl": "/tensorflow/jupyter/2020/05/04/tensor-operation.html",
            "date": " • May 4, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "强推使用FastPages搭建博客",
            "content": "&#20160;&#20040;&#26159;FastPages . FASTAI出品的一个易用的博客框架，尤其突出的特性是对JupyterNoteBook的支持。 . &#22914;&#20309;&#23433;&#35013;FastPages . 非常简单。 . （1）通过这个链接生成一份fork； . （2）GitHub会在约30s后为你的fork开一个Pull Request； . （3）进入Pull Request，按要求首先创建一对 RSA 密钥对。你可以在本地用ssh-key-gen命令创建； . （4）配置RSA密钥对。注意private key命名必须是SSH_DEPLOY_KEY，不然后边部署时会报错； . （5）Merge这个Pull Request，30s后就可以见到你的博客了； . （5）如果Merge过程中出现错误，可以到Actions页面里边点击重试. . &#22914;&#20309;&#37197;&#32622;FastPages . FastPages安装完成后，初始页面看起来是这个样子的： . TK: add title 修改① - 在_config.yml中修改title字段 . 修改② - 在_pages中修改about.md . 修改③ - 在根目录下修改index.html . 修改④ - 在_config.yml中修改description字段 . 修改⑤ - 在_config.yml中修改social_links字段 . &#38382;&#39064; . (1)如果你遇到了类似这样的错误-- . jekyll_1 | Liquid Exception: Permission denied @ rb_sysopen - /data/.tweet-cache/ee341900d3bc668607abd8cba365fd1b.cache in /data/_posts/2020-01-14-test-markdown-post.md jekyll_1 | /usr/local/bundle/ruby/2.6.0/gems/jekyll-twitter-plugin-2.1.0/lib/jekyll-twitter-plugin.rb:41:in `initialize&#39;: Permission denied @ rb_sysopen - /data/.tweet-cache/ee341900d3bc668607abd8cba365fd1b.cache (Errno::EACCES) . 请在目录下执行以下命令： . mkdir .jekyll-cache _site .tweet-cache &amp;&amp; touch .jekyll-metadata . 如果仍有问题，则在docker-compose.yml中，jekyll -&gt; command节点下，加入以下语句： . chmod 777 * .tweet-cache . (2) 如果你发现笔记本中粘贴的图片无法展示 -- 请升级到最新版本的fastpages。 . (3) 如果你发现在粘贴图片后CI状态变为Fail -- . 请按照代码方式更新你的nb2post.py文件。 . (4) 如何用Jupyter Lab快速打开目录（windows） . Jupyter Lab默认打开的是用户目录，如何实现快速打开任意路径下的fastpages文件呢？建符号链接 -- . 复制fastpages的_notebooks路径 {dir} . | 用户目录下打开文件资源管理器，ctrl+L，输入cmd打开命令提示符 . | 输入mklink notebook {dir} . | jupyter lab启动后直接打开notebook文件夹即可 . | . &#24635;&#32467; . FastPages博客的配置和更新方式都和维护一般Git项目类似，对NoteBook的支持应该会催生一批数据科学家用户。 . PS:这篇文章同步发表于Gridea .",
            "url": "https://henryalps.github.io/fastpages/jupyter/2020/05/04/fastpages.html",
            "relUrl": "/jupyter/2020/05/04/fastpages.html",
            "date": " • May 4, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "關於",
          "content": "詩雲： 世間豈得桃源路，陶庵夢斷終不覓。 . Arxiv歎何其多，知乎亦苦難窮盡。 花落水走了無痕，千帆過罷空餘恨。 惟願心做金石意，要留新語在人間。 .",
          "url": "https://henryalps.github.io/fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://henryalps.github.io/fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}